'use strict';

var { MessageActionRow, MessageButton, Permissions, MessageSelectMenu } = require('discord.js'),
    { connection } = require('./connection.js'),
    { isAN } = require('../utils/index.ts');

class CaptureSystems {
    check_new_capture = async (bot, message) => {
        if (message.content.toLowerCase().includes('–∑–∞–±–∏–≤') || message.content.toLowerCase().includes('–∫–∞–ø—Ç') || message.content.toLowerCase().includes('–º–æ—Ä–æ–∑') || message.content.toLowerCase().includes('–∫–∞–ø—á—É') || message.content.toLowerCase().includes('–æ—Ç–±–∏–≤') || message.content.toLowerCase().includes('–æ—Ç–∫–∞—Ç')) {
            connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${message.guild.id}'`, async (error, guild) => {
                if (error || guild.length == 0) { if (error) return console.error(error); else return; };
                if (guild[0].enable_captureinfo == 0 || message.channel.id != guild[0].capture_from) return;
                var row = new MessageActionRow().addComponents(
                    new MessageButton()
                        .setCustomId('capture_plus')
                        // .setLabel('–û–¥–æ–±—Ä–∏—Ç—å')
                        .setEmoji(`‚úÖ`)
                        .setStyle('SUCCESS'),
                    new MessageButton()
                        .setCustomId('capture_minus')
                        // .setLabel('–û—Ç–∫–ª–æ–Ω–∏—Ç—å')
                        .setEmoji(`‚ùå`)
                        .setStyle('DANGER'),
                    new MessageButton()
                        .setCustomId('capture_clear')
                        // .setLabel('–û—á–∏—Å—Ç–∏—Ç—å')
                        .setEmoji(`üá©`)
                        .setStyle('SECONDARY')
                );
                message.channel.send({ 
                    content: `${message.author}: ${message.content}`,
                    components: [row]
                })
                return message.delete().catch(() => {})
                .catch(() => { });
            })
        }
    };

    check_new_strela = async (bot, message) => {
        if ((message.content.toLowerCase().includes('–∑–∞–±–∏–≤') || message.content.toLowerCase().includes('—Å—Ç—Ä–µ–ª—É') || message.content.toLowerCase().includes('–º–æ—Ä–æ–∑') || message.content.toLowerCase().includes('–æ—Ç–∫–∞—Ç') || message.content.toLowerCase().includes('–æ—Ç–±–∏–≤'))) {
            await connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${message.guild.id}'`, async (error, guild) => {
                if (error || guild.length == 0) { if (error) return console.error(error); else return; };
                if (guild[0].enable_strelinfo == 1) {
                    if (message.channel.id != guild[0].strel_from) return;
                    var row = new MessageActionRow().addComponents(
                        new MessageButton()
                            .setCustomId('strela_22')
                            .setLabel('2 x 2')
                            .setStyle('SUCCESS'),
                        new MessageButton()
                            .setCustomId('strela_33')
                            .setLabel('3 x 3')
                            .setStyle('SUCCESS'),
                        new MessageButton()
                            .setCustomId('strela_44')
                            .setLabel('4 x 4')
                            .setStyle('SUCCESS'),
                        new MessageButton()
                            .setCustomId('strela_55')
                            .setLabel('5 x 5')
                            .setStyle('SUCCESS'),
                    );
                    var row2 = new MessageActionRow().addComponents(
                        new MessageButton()
                            .setCustomId('strela_minus')
                            .setEmoji(`‚ùå`)
                            .setStyle('DANGER'),
                        new MessageButton()
                            .setCustomId('strela_clear')
                            .setEmoji(`üá©`)
                            .setStyle('SECONDARY'),
                    )
                    var row3 = new MessageActionRow().addComponents(
                        new MessageButton()
                            .setCustomId('strela_plus')
                            .setEmoji(`‚úÖ`)
                            .setStyle('SUCCESS'),
                        new MessageButton()
                            .setCustomId('strela_minus')
                            .setEmoji(`‚ùå`)
                            .setStyle('DANGER'),
                        new MessageButton()
                            .setCustomId('strela_clear')
                            .setEmoji(`üá©`)
                            .setStyle('SECONDARY'),
                    )
                    message.channel.send({ 
                        content: `${message.author}: ${message.content}`,
                        components: guild[0].strel_type === 1 ? [row3] : [row, row2]
                    })
                    return message.delete().catch(() => { });
                }
            });
        }
    };

    anketa_winslow = async (bot, message) => {
        var _channels = ["893012932860993583", "683381028626104533", "926474491704520742"]
        if (_channels.some(chann => chann == message.channel.id)) {
            // if (!message.content.toLowerCase().includes('–∏–º—è') || !message.content.toLowerCase().includes('–Ω–∏–∫')) return;
            var rightForm = form(message.content, message.channel.id);
            let massiv = message.content.split('\n');
            if (rightForm) {
                await connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${message.guild.id}'`, async (error, guild) => {
                    if (error) return console.log(error)
                    if (guild.length == 0) return;
                    var senators_id = JSON.parse(guild[0].anketa_moders);
                    if (message.channel.id === '893012932860993583') {
                        if(!massiv[0].includes('_')) {
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #1 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[2].includes('_')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #3 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                    } else if (message.channel.id === '683381028626104533') {
                        if(!massiv[0].includes('_')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #1 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[3].includes('_')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[5].includes('forum.arizona-rp.com')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[6].includes('vk.com')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                    } else if (message.channel.id === '926474491704520742') {
                        if(!massiv[0].includes('_')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #1 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[3].includes('_')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[5].includes('forum.arizona-rp.com')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –Ω–∏–∫ –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                        if(!massiv[6].includes('vk.com')){
                            message.member.send({
                                embeds: [{
                                    color: 0xE53935,    
                                    title: '‚ùå | –û—à–∏–±–∫–∞', 
                                    description: `**–í –ø—É–Ω–∫—Ç–µ #4 –í–ö –Ω–µ –ø–æ —Ñ–æ—Ä–º–µ!**`, 
                                    timestamp: new Date() 
                                }]
                            })
                            return message.react('‚ö†Ô∏è');
                        }
                    }
                    
                    var user;
                    if (message.mentions?.users.map(x => x).length == 0) user = false;
                    else user = message.guild.members.cache.get(message.mentions.users.first().id);
                    if (!user) user = false;
                    var row = new MessageActionRow().addComponents(
                        new MessageButton()
                            .setCustomId('anketa_plus')
                            .setEmoji(`‚úÖ`)
                            .setStyle('SUCCESS'),
                        new MessageButton()
                            .setCustomId('anketa_minus')
                            .setEmoji(`‚ùå`)
                            .setStyle('DANGER'),
                    );
                    var anketa_type;
                    if (message.content.includes('–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –æ–Ω')) anketa_type = '–ê–Ω–∫–µ—Ç–∞ –Ω–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è:';
                    else if (message.content.includes('–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è')) anketa_type = '–ê–Ω–∫–µ—Ç–∞ –Ω–∞ —Å–Ω—è—Ç–∏–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è:';
                    else if (message.content.toLowerCase().includes('–ø–æ—Å—Ç–∞–≤–∏–ª')) anketa_type = '–ê–Ω–∫–µ—Ç–∞ –Ω–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è:';
                    else if (message.content.toLowerCase().includes('—Å–Ω—è–ª')) anketa_type = '–ê–Ω–∫–µ—Ç–∞ –Ω–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è:';
                    else anketa_type = '–§–æ—Ä–º–∞ –∞–Ω–∫–µ—Ç—ã –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'
                    var senators = message.guild.roles.cache.filter(r => senators_id.some(_r => _r == r.id));
                    message.channel.send({
                        content: `${message.author} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É ${senators.map(m => `<@&${m.id}>`).join(', ')}!`,
                        embeds: [{
                            color: 0xfdc2ff,
                            description: `${message.content}`,
                            title: `${anketa_type}`,
                            url: `${user ? `https://discord.com/channels/@me/${user.id}` : ``}`,
                            author: {
                                name: `${message.member.displayName || message.member.user.username + message.member.user.tag}`,   
                                icon_url: message.member.user.displayAvatarURL({ format: 'png', size: 2048, dynamic: true }),
                                url: `https://discord.com/channels/@me/${message.author.id}`  
                            },
                            footer: {
                                text: `${user ? `${user.displayName || user.user.username + user.user.tag}` : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}`,
                                icon_url: `${user ? `${user.user.displayAvatarURL({ format: 'png', size: 2048, dynamic: true })}` : ""}`,
                            }
                        }],
                        components: [row]
                    })
                    return message.delete().catch(() => {});
                });
            }
        }
    };



    private_buttons = async (bot, interaction) => {
        var member = interaction.member;
        var message = interaction.message
        connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${member.guild.id}'`, async (error, guild) => {
            if (error || guild.length == 0) { if (error) { return console.log(error); } else return };
            connection.query(`SELECT * FROM \`discord_privates\` WHERE \`guild\` = '${member.guild.id}' AND \`author\` = '${member.id}'`, async (err, privatesql) => {
                if (err || privatesql.length == 0) { if (err) { return console.log(err); } else return };
                switch(interaction.customId) {
                    case "voice_delete": {
                        if (!member.voice.channel) return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
                            }
                            if (result.length == 0) return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].text_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
                                var channel_voice = member.guild.channels.cache.get(result[0].voice_channel)
                                var channel_text = member.guild.channels.cache.get(result[0].text_channel)
                                if (channel_voice) {
                                    connection.query(`DELETE FROM \`discord_privates\` WHERE \`voice_channel\` = '${channel_voice.id}'`)
                                    channel_voice.delete().catch(() => {})
                                    .catch(() => {})
                                }
                                if (channel_text) channel_text.delete().catch(() => {});
                            }
                        });
                        break;
                    };
                    case "voice_kick": {
                        if (!member.voice.channel) return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
                            }
                            if (result.length == 0)return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].text_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
                                var channel = member.guild.channels.cache.get(result[0].voice_channel)
                                await interaction.reply({ content: `${member}, —É–ø–æ–º—è–Ω–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–µ! –£ –≤–∞—Å –Ω–∞ —ç—Ç–æ –º–∏–Ω—É—Ç–∞`, ephemeral: true }).then(async () => {
                                    const filter = response => {
                                        return response?.member?.id == member.id
                                    }
                                    await interaction.channel.awaitMessages({
                                        filter,
                                        max: 1,
                                        time: 1000 * 60,
                                        errors: ["time"]
                                    }).then(async answer => {
                                        let answ = answer.first()
                                        answ.delete().catch(() => {})
                                        if (!answ.mentions?.users.map(x => x).length == 0) return interaction.reply({ content: `–í—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!`, ephemeral: true });
                                        var results = []
                                        answ.mentions.members.forEach((members) => {
                                            if (members.voice.channel) {
                                                if (members.voice.channel.id == channel.id) {
                                                    members.voice.disconnect()
                                                }
                                            }
                                            if (members.id == member.id) return results.push('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–∏–∫–Ω—É—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è')
                                            if (!channel.permissionOverwrites.cache.get(members.id))return results.push(`–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${members} –≤ –ø—Ä–∞–≤–∞—Ö —Ç–µ–∫—É—â–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`)
                                            channel.permissionOverwrites.delete(members.id)
                                            results.push(`–£—á–∞—Å—Ç–Ω–∏–∫ ${members} –±—ã–ª –∫–∏–∫–Ω—É—Ç —Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞`)
                                        })
                                        await interaction.followUp({ content: `${results.join('\n')}`, ephemeral: true })
                                    }).catch(async (err) => {
                                        console.log(err)
                                        return await interaction.followUp({ content: `–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞ —Å—á–µ—Ç –∫–∏–∫–Ω—É—Ç—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞!`, ephemeral: true })
                                    });
                                });
                            }
                        });
                        break;
                    };
                    case "voice_adduser": {
                        if (!member.voice.channel) return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
                            }
                            if (result.length == 0) return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].text_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
                                var channel = member.guild.channels.cache.get(result[0].voice_channel)
                                await interaction.reply({ content: `${member}, —É–ø–æ–º—è–Ω–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–µ! –£ –≤–∞—Å –Ω–∞ —ç—Ç–æ –º–∏–Ω—É—Ç–∞`, ephemeral: true }).then(async () => {
                                    var filter = response => {
                                        return response?.member?.id == member.id
                                    }
                                    await interaction.channel.awaitMessages({
                                        filter,
                                        max: 1,
                                        time: 1000 * 60,
                                        errors: ["time"]
                                    }).then(async answer => {
                                        var answ = answer.first()
                                        answ.delete().catch(() => {})
                                        if (!answ.mentions?.users.map(x => x).length == 0) return interaction.reply({ content: `–í—ã –Ω–µ —É–ø–æ–º—è–Ω—É–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞/–æ–≤`, ephemeral: true });
                                        var list = []
                                        answ.mentions.members.forEach((member) => {
                                            channel.permissionOverwrites.edit(member.id, {
                                                VIEW_CHANNEL: true,
                                                CONNECT: true,
                                                SPEAK: true,
                                                USE_VAD: true,
                                                STREAM: true,
                                            })
                                            list.push(member)
                                        })
                                        return await interaction.followUp({ content: `–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ${list.map(m => `<@${m.id}>`).join(', ')} –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª!`, ephemeral: true })
                                    }).catch(async (err) => {
                                        console.log(err)
                                        return await interaction.followUp({ content: `–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞ —Å—á–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª!`, ephemeral: true })
                                    });
                                }).catch(() => {})
                            }
                        });
                        break;
                    };
                    case "voice_limit": {
                        if (!member.voice.channel) return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
                            }
                            if (result.length == 0) return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].text_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
                                var channel = member.guild.channels.cache.get(result[0].voice_channel)
                                await interaction.reply({ content: `${member}, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –¥–ª—è –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç, —É –≤–∞—Å –Ω–∞ —ç—Ç–æ –µ—Å—Ç—å –º–∏–Ω—É—Ç–∞!`, ephemeral: true }).then(async () => {
                                    const filter = response => {
                                        return response?.member?.id == member.id
                                    }
                                    await interaction.channel.awaitMessages({
                                        filter,
                                        max: 1,
                                        time: 1000 * 60,
                                        errors: ["time"]
                                    }).then(async answer => {
                                        var limit = answer.first()
                                        limit.delete().catch(() => {})
                                        if (isAN(limit.content))return await interaction.followUp({ content: `–ü–∞—Ä–∞–º–µ—Ç—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–º!`, ephemeral: true });
                                        if (limit.content > 99 || limit.content < 2) return await interaction.followUp({ content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 99 –∏ –º–µ–Ω—å—à–µ —á–µ–º 2`, ephemeral: true });
                                        await channel.setUserLimit(`${limit.content}`)
                                        return await interaction.followUp({ content: `–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                                    }).catch(async (err) => {
                                        console.log(err)
                                        return await interaction.followUp({ content: `–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞ —Å—á–µ—Ç –ª–∏–º–∏—Ç–∞ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                                    });
                                }).catch(() => {});
                            }
                        });
                        break;
                    };
                    case "voice_name": {
                        if (!member.voice.channel) return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
                            }
                            if (result.length == 0) return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].text_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id) return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true });
                                var channel = member.guild.channels.cache.get(result[0].voice_channel)
                                await interaction.reply({ content: `${member}, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç, —É –≤–∞—Å –Ω–∞ —ç—Ç–æ –µ—Å—Ç—å –º–∏–Ω—É—Ç–∞!`, ephemeral: true }).then(async () => {
                                    const filter = response => {
                                        return response?.member?.id == member.id
                                    }
                                    await interaction.channel.awaitMessages({
                                        filter,
                                        max: 1,
                                        time: 1000 * 60,
                                        errors: ["time"]
                                    }).then(async answer => {
                                        var name = answer.first()
                                        name.delete().catch(() => {})
                                        if (name.length >= 32)return await interaction.reply({ content: `${member}, –í—ã —É–∫–∞–∑–∞–ª–∏ –±–æ–ª–µ–µ 32 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞`, ephemeral: true })
                                        channel.setName(name.content).catch(async (err) => { 
                                            console.log(err) 
                                            return await interaction.followUp({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞..`, ephemeral: true })
                                        })
                                        return await interaction.followUp({ content: `–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞!`, ephemeral: true })
                                    }).catch(async (err) => {
                                        console.log(err)
                                        return await interaction.reply({ content: `–í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –∑–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞ —Å—á–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞!`, ephemeral: true })
                                    });
                                }).catch(() => {});
                            }
                        })
                        break;
                    };
                    case "voice_lock": {
                        if (!member.voice.channel) {
                            return await interaction.reply({ content: `–í—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!`, ephemeral: true })
                        }
                        if (member.voice.channel.parentId != JSON.parse(guild[0].private_settings).category_id) {
                            return await interaction.reply({ content: `–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç!`, ephemeral: true })
                        }
                        connection.query(`SELECT * FROM \`discord_privates\` WHERE \`voice_channel\` = '${member.voice.channel.id}'`, async (err, result) => {
                            if (err) {
                                console.log(err)
                                return await interaction.reply({ content: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!`, ephemeral: true })
                            }
                            if (result.length == 0)  return await interaction.reply({ content: `–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤!`, ephemeral: true });
                            else {
                                if (result[0].text_channel != message.channel.id)  return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ <#${result[0].voice_channel}>`, ephemeral: true });
                                else if (result[0].author != member.id)  return await interaction.reply({ content: `–ü—Ä–∏–≤–∞—Ç –∫–æ–º–Ω–∞—Ç–∞–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–∞ <@${result[0].author}>`, ephemeral: true });
                                else if (member.voice.channel.id != result[0].voice_channel) return await interaction.reply({ content: `–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª–µ`, ephemeral: true })
                                var channel = member.guild.channels.cache.get(result[0].voice_channel)
                                if (channel.permissionOverwrites.cache.get(member.guild.id).allow.serialize()['CONNECT'] == false) {
                                    channel.permissionOverwrites.edit(member.guild.id, {
                                        VIEW_CHANNEL: true,
                                        CONNECT: true,
                                        SPEAK: true,
                                        USE_VAD: true,
                                        STREAM: true,
                                    })
                                    return interaction.reply({ content: `–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –æ—Ç–∫—Ä—ã—Ç`, ephemeral: true })
                                } else if (channel.permissionOverwrites.cache.get(member.guild.id).allow.serialize()['CONNECT'] == true) {
                                    channel.permissionOverwrites.edit(member.guild.id, {
                                        VIEW_CHANNEL: false,
                                        CONNECT: false,
                                        SPEAK: false,
                                        USE_VAD: false,
                                        STREAM: false,
                                    })
                                    return interaction.reply({ content: `–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É –∑–∞–∫—Ä—ã—Ç`, ephemeral: true })
                                }
                            }
                        })
                        break;
                    };
                    default: break;
                };
            });
        });
    };

    roles9_list = async (bot, interaction) => {
        if (!["role9g_plus", "role9r_plus", "role9_wait", "role9_minus", "role9_delete"].some(id => id == interaction.values)) return;
        var { member, message } = interaction;
        await connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${member.guild.id}'`, async (error, guild) => {
            if (error) {
                console.log(error)
                return await interaction.reply({ content: `${member}, –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞!`, ephemeral: true })
            }
            if (guild.length === 0) return;
            if (guild[0].deputy_module == 0) return;
            switch(interaction.values[0]) {
                case "role9g_plus": {
                    var gguild = bot.guilds.cache.get(member.guild.id);
                    var user = gguild.members.cache.get(message.embeds[0].fields[2].value.replace(/[^a-z–∞-—è—ë0-9\s]/gi, ''));
                    if (!user) return await interaction.reply({ content: `${member}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω...`, ephemeral: true })
                    var roleid = message.embeds[0].fields[0].value.replace(/[^a-z–∞-—è—ë0-9\s]/gi, '');
                    if (message.channel.id == JSON.parse(guild[0].deputy_settings).ghetto_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else if (message.channel.id == JSON.parse(guild[0].deputy_settings).mafia_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else return;
                    var role = member.guild.roles.cache.get(roleid);
                    if (!role) return await interaction.reply({ content: `${member}, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Ä–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏!`, ephemeral: true })
                    var logs = member.guild.channels.cache.find(c => c.id == JSON.parse(guild[0].deputy_settings).logs);
                    user.roles.add(role).then(() => {
                        if (JSON.parse(guild[0].deputy_settings).additional_roles[roleid]) {
                            user.roles.add(gguild.roles.cache.get(JSON.parse(guild[0].deputy_settings).additional_roles[roleid]))
                            .catch(() => {})
                        }
                        if (logs) logs.send({
                            content: `>>> **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** <@${member.id}>\n\`\`\`diff\n+ –í—ã–¥–∞–ª —Ä–æ–ª—å "${role.name}"\`\`\`**–ó–∞–ø—Ä–æ—Å–∏–ª:** ${user}\n**‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî**`
                        });
                        user.send({
                            embeds: [{
                                color: 0x43b581,
                                title: `–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏`,
                                description: `**–í–∞–º —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å "${role.name}"**`,
                                footer: {
                                    text: member.guild.name,
                                    icon_url: member.guild.iconURL() 
                                }
                            }]
                        })
                        message.edit({
                            content: `**${member} –æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å!**`,
                            embeds: [{
                                color: 0x43b581,
                                title: "[–û–¥–æ–±—Ä–µ–Ω–æ]: " + message.embeds[0].title,
                                fields: [
                                    message.embeds[0].fields
                                ],
                                timestamp: new Date(),
                            }],
                            components: []
                        })
                    })
                    .catch(async (e) => {
                        await interaction.reply({ content: `–û—à–∏–±–∫–∞, —è –Ω–µ —Å–º–æ–≥ –≤—ã–¥–∞—Ç—å —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫—É..`, ephemeral: true })
                    })
                    break;
                };
                case "role9r_plus": {
                    var gguild = bot.guilds.cache.get(member.guild.id);
                    var user = gguild.members.cache.get(message.embeds[0].fields[2].value.replace(/[^a-z–∞-—è—ë0-9\s]/gi, ''));
                    if (!user) return await interaction.reply({ content: `${member}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω...`, ephemeral: true })
                    var roleid = message.embeds[0].fields[0].value.replace(/[^a-z–∞-—è—ë0-9\s]/gi, '');
                    if (message.channel.id == JSON.parse(guild[0].deputy_settings).ghetto_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else if (message.channel.id == JSON.parse(guild[0].deputy_settings).mafia_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else return;
                    var role = member.guild.roles.cache.get(roleid);
                    if (!role) return await interaction.reply({ content: `${member}, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Ä–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏!`, ephemeral: true })
                    var logs = member.guild.channels.cache.find(c => c.id == JSON.parse(guild[0].deputy_settings).logs);
                    user.roles.remove(role).then(() => {
                        if (JSON.parse(guild[0].deputy_settings).additional_roles[roleid]) {
                            user.roles.remove(gguild.roles.cache.get(JSON.parse(guild[0].deputy_settings).additional_roles[roleid]))
                            .catch(() => {})
                        }
                        if (logs) logs.send({
                            content: `>>> **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** <@${member.id}>\n\`\`\`diff\n- –°–Ω—è–ª —Ä–æ–ª—å "${role.name}"\`\`\`**–ó–∞–ø—Ä–æ—Å–∏–ª:** ${user}\n**‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî**`
                        });
                        user.send({
                            embeds: [{
                                color: 0x43b581,
                                title: `–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–Ω—è—Ç–∏–µ —Ä–æ–ª–∏`,
                                description: `**–í–∞–º –±—ã–ª–∞ —Å–Ω—è—Ç–∞ —Ä–æ–ª—å "${role.name}"**`,
                                footer: {
                                    text: member.guild.name,
                                    icon_url: member.guild.iconURL() 
                                }
                            }]
                        })
                        message.edit({
                            content: `**${member} –æ–¥–æ–±—Ä–∏–ª –∑–∞–ø—Ä–æ—Å!**`,
                            embeds: [{
                                color: 0x43b581,
                                title: "[–û–¥–æ–±—Ä–µ–Ω–æ]: " + message.embeds[0].title,
                                fields: [
                                    message.embeds[0].fields
                                ],
                                timestamp: new Date(),
                            }],
                            components: []
                        })
                    })
                    .catch(async () => {
                        await interaction.reply({ content: `–û—à–∏–±–∫–∞, —è –Ω–µ —Å–º–æ–≥ —Å–Ω—è—Ç—å —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫—É..`, ephemeral: true })
                    })
                    break;
                };
                case "role9_wait": {
                    if (message.channel.id == JSON.parse(guild[0].deputy_settings).ghetto_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else if (message.channel.id == JSON.parse(guild[0].deputy_settings).mafia_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else return;
                    var row = new MessageActionRow()
                    .addComponents(
                        new MessageSelectMenu()
                            .setCustomId('select')
                            .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Ç—Å–≤–∏–µ')
                            .addOptions([
                                {
                                    label: '‚úÖ',
                                    description: '–í—ã–¥–∞—Ç—å —Ä–æ–ª—å –∏–≥—Ä–æ–∫—É',
                                    value: 'role9g_plus',
                                },
                                {
                                    label: '‚ùå',
                                    description: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞',
                                    value: 'role9_minus',
                                },
                                {
                                    label: 'üóëÔ∏è',
                                    description: '–û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å',
                                    value: 'role9_delete',
                                },
                            ]),
                    );
                    message.edit({
                        content: `${member} –ø–µ—Ä–µ–≤–µ–ª –∑–∞–ø—Ä–æ—Å –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è..`,
                        embeds: [{
                            color: 0xf9a62b,
                            title: "[–í –æ–∂–∏–¥–∞–Ω–∏–∏]" + message.embeds[0].title,
                            fields: [
                                message.embeds[0].fields
                            ],
                            timestamp: new Date(),
                        }],
                        components: [row],
                    })
                    .then(async () => {
                        await interaction.reply({ content: `${member}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –∑–∞–ø—Ä–æ—Å –≤ —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è..`, ephemeral: true }).catch(() => {});
                    }).catch(() => {});
                    break;
                };
                case "role9_minus": {
                    if (message.channel.id == JSON.parse(guild[0].deputy_settings).ghetto_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else if (message.channel.id == JSON.parse(guild[0].deputy_settings).mafia_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else return;
                    var gguild = bot.guilds.cache.get(member.guild.id);
                    var user = gguild.members.cache.get(message.embeds[0].fields[2].value.replace(/[^a-z–∞-—è—ë0-9\s]/gi, ''));
                    if (!user) return await interaction.reply({ content: `${member}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω...`, ephemeral: true })
                    await interaction.reply({ content: `${member}, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞ –≤ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏..`, ephemeral: true }).then(async () => {
                        var filter = response => { return response?.member?.id == member.id };
                        await interaction.channel.awaitMessages({ filter, max: 1, time: 1000 * 60, errors: ["time"] }).then(async answer => {
                            var answ = answer.first();
                            answ.delete().catch(() => {})
                            user.send({
                                embeds: [{
                                    color: 0xf04747,
                                    title: `–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏`,
                                    description: `**–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏ 9  –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω ${member} –ø–æ –ø—Ä–∏—á–∏–Ω–µ:\n\`\`\`${answ.content}\`\`\`**`,
                                    footer: {
                                        text: member.guild.name,
                                        icon_url: member.guild.iconURL() 
                                    }
                                }]
                            }).catch(() => {});
                            message.edit({
                                content: `${member} –æ—Ç–∫–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –ø–æ –ø—Ä–∏—á–∏–Ω–µ \`${answ.content}\``,
                                embeds: [{
                                    color: 0xf04747,
                                    title: "[–û—Ç–∫–ª–æ–Ω–µ–Ω–æ]" + message.embeds[0].title,
                                    fields: [
                                        message.embeds[0].fields
                                    ],
                                    timestamp: new Date(),
                                }],
                                components: [],
                            })
                            .then(async () => {
                                await interaction.followUp({ content: `${member}, –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user}`, ephemeral: true }).catch(() => {});
                            })
                            .catch(() => {});
                        }).catch(async (err) => {
                            return await interaction.followUp({ content: `${member}, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä–æ–¥–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ..`, ephemeral: true })
                        });
                    });
                    break;
                };
                case "role9_delete": {
                    if (message.channel.id == JSON.parse(guild[0].deputy_settings).ghetto_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else if (message.channel.id == JSON.parse(guild[0].deputy_settings).mafia_channel) {
                        if (!member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).includes(r.id)))
                            return await interaction.reply({ content: `${member}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`, ephemeral: true });
                    } else return;
                    message.edit({
                        content: `${member} –æ—á–∏—Å—Ç–∏–ª –∑–∞–ø—Ä–æ—Å`,
                        embeds: [{
                            color: 0x36393F,
                            title: "[–û—á–∏—â–µ–Ω–æ]" + message.embeds[0].title,
                            fields: [
                                message.embeds[0].fields
                            ],
                            timestamp: new Date(),
                        }],
                        components: []
                    }).then(async () => {
                        await interaction.reply({ content: `${member}, –í—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—Å—Ç–∏–ª–∏ –∑–∞–ø—Ä–æ—Å!`, ephemeral: true })
                    })
                    break;
                };
                default: break;
            }
        });
    };
};

function form(cnt, channel) {
    if (channel == '893012932860993583') {
        var lowerCaseContent = cnt.toLowerCase();
        var true_form = ['–∏–º—è —Ñ–∞–º–∏–ª–∏—è(–ª–∏–¥–µ—Ä–∞)', '–∫–∞–∫–æ–π –º–∞—Ñ–∏–∏ –≤—ã –ª–∏–¥–µ—Ä', 'discord'];
        return true_form.every(i => lowerCaseContent.includes(i));
    } else if (channel == '683381028626104533') {
        var lowerCaseContent = cnt.toLowerCase();
        var true_form = ['–≤–∞—à–∞ –º–∞—Ñ–∏—è', '–Ω–∏–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞', '—Ñ–æ—Ä—É–º–Ω–∏–∫'];
        return true_form.every(i => lowerCaseContent.includes(i));
    } else if (channel == '864458716999974924') {
        var lowerCaseContent = cnt.toLowerCase();
        var true_form = ['–≤–∞—à–∞ –º–∞—Ñ–∏—è', '–Ω–∏–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞', '—Ñ–æ—Ä—É–º–Ω–∏–∫'];
        return true_form.every(i => lowerCaseContent.includes(i));
    }
    else if (channel == '926474491704520742') {
        var lowerCaseContent = cnt.toLowerCase();
        var true_form = ['–Ω–∏–∫ –ª–∏–¥–µ—Ä–∞ –º–∞—Ñ–∏–∏', '–Ω–∏–∫ –ª–∏–¥–µ—Ä–∞ –º–∞—Ñ–∏–∏', '–ø–æ—Å—Ç–∞–≤–∏–ª/—Å–Ω—è–ª –∑–∞–º–∞', '–Ω–∏–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞'];
        return true_form.every(i => lowerCaseContent.includes(i));
    }
}

module.exports = new CaptureSystems();