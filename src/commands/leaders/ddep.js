var { MessageActionRow, MessageSelectMenu } = require('discord.js'),   
    { connection } = require('../../handlers/connection');

module.exports = {
    name: "ddep",
    aliases: ["ddep"],
    category: "leaders",
    description: ".",
    usage: "adep",
    run: async (bot, message) => {
        connection.query(`SELECT * FROM \`discord_settings\` WHERE \`guild\` = '${message.guild.id}'`, async (error, guild) => {
            if (error) {
                message.reply({
                    embeds:[{
                        color: 0xE53935,
                        title: `‚ö†Ô∏è | –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞`,
                        description: `\`\`\`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\`\`\``
                    }]
                });
                return console.log(error) && message.react(`‚ö†Ô∏è`);
            }
            if (guild.length === 0) return; else if (guild[0].deputy_module == 0) return;
            if (!message.member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).leader_roles).includes(r.id))) {
                message.channel.send({ 
                    embeds: [{
                        color: 0xE53935,
                        title: `üìõ | –û—à–∏–±–∫–∞`,
                        description: `\`\`\`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!\`\`\``,
                    }]
                }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                return message.delete().catch(() => {});
            }
            if (!message.mentions.users) {
                message.channel.send({
                    embeds:[{
                        color: 0xE53935,
                        title: `üìõ | –û—à–∏–±–∫–∞`,
                        description: `\`\`\`–£–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\`\`\``,
                        footer : {
                            text: '/ddep [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–ù–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]'
                        }   
                    }]
                }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                return message.delete().catch(() => {})
            }
            var users = [];
            message.mentions.members.forEach((member) => { users.push(member) });
            if (users.length == 0) {
                message.channel.send({
                    embeds:[{
                        color: 0xE53935,
                        title: `üìõ | –û—à–∏–±–∫–∞`,
                        description: `\`\`\`–£–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\`\`\``,
                        footer : {
                            text: '/ddep [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–ù–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]'
                        }   
                    }]
                });
            }
            if (users.length == 1 && users.map(m => m.id).includes(message.author.id)) {
                message.channel.send({
                    embeds:[{
                        color: 0xE53935,
                        title: `üìõ | –û—à–∏–±–∫–∞`,
                        description: `\`\`\`–°–∞–º–æ–º—É —Å–µ–±–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–µ–ª—å–∑—è!\`\`\``,
                        footer : {
                            text: '/adep [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–ù–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π]'
                        }   
                    }]
                }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                return message.delete().catch(() => {})
            } else if (users.length < 2 && users.map(m => m.id).includes(message.author.id)) {
                users = users.filter(function(user) { if (!user.map(m => m.id).includes(message.author.id)) return user });
            }
            var row = new MessageActionRow()
            .addComponents(
                new MessageSelectMenu()
                    .setCustomId('select')
                    .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Ç—Å–≤–∏–µ')
                    .addOptions([
                        {
                            label: '‚úÖ',
                            description: '–°–Ω—è—Ç—å —Ä–æ–ª—å –∏–≥—Ä–æ–∫—É',
                            value: 'role9r_plus',
                        },
                        {
                            label: '‚è≥',
                            description: '–†–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è',
                            value: 'role9_wait',
                        },
                        {
                            label: '‚ùå',
                            description: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–≥—Ä–æ–∫–∞',
                            value: 'role9_minus',
                        },
                        {
                            label: 'üóëÔ∏è',
                            description: '–û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å',
                            value: 'role9_delete',
                        },
                    ]),
            );
            if (message.member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).ghetto_leader).includes(r.id))) {
                var role = null, name = null, senators = message.guild.roles.cache.filter(r => (JSON.parse(guild[0].deputy_settings).senators_ghetto).some(_r => _r == r.id));
                if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('grove'))) role = JSON.parse(guild[0].deputy_settings).fractions['grove'], name = 'Grove Street'; // Grove
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('ballas'))) role = JSON.parse(guild[0].deputy_settings).fractions['ballas'], name = 'Ballas Gang'; // Ballas
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('rifa'))) role = JSON.parse(guild[0].deputy_settings).fractions['rifa'], name = 'San Fierro Rifa'; // Rifa
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('aztec'))) role = JSON.parse(guild[0].deputy_settings).fractions['aztec'], name = 'Varrios Los Aztecas'; // Aztec
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('vagos'))) role = JSON.parse(guild[0].deputy_settings).fractions['vagos'], name = 'Los Santos Vagos'; // Vagos
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('night'))) role = JSON.parse(guild[0].deputy_settings).fractions['nw'], name = 'Night Wolves'; // Night Wolves
                else {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `üìõ | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–ù–µ —Å–º–æ–≥ –ø–æ–Ω—è—Ç—å –Ω–∞ –∫–∞–∫—É—é —Ñ—Ä–∞–∫—Ü–∏—é –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è —Ä–æ–ª—å...\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                var channel = message.guild.channels.cache.find(c => c.id == JSON.parse(guild[0].deputy_settings).ghetto_channel);
                if (!channel) {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `‚ö†Ô∏è | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø–æ –≤—ã–¥–∞—á–µ —Ä–æ–ª–µ–π 9 –≥–µ—Ç—Ç–æ...\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                var currole = message.guild.roles.cache.find(r => r.id == role);
                if (!currole) {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `‚ö†Ô∏è | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–†–æ–ª—å "${name}" –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                users.forEach((members) => {
                    var curuser = message.guild.members.cache.get(members.id);
                    if (curuser) {
                        if (!curuser.roles.cache.some(r => (r.id).includes(currole.id))) {
                            message.channel.send({
                                embeds:[{
                                    color: 0xE53935,
                                    title: `üìõ | –û—à–∏–±–∫–∞`,
                                    description: `**–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${curuser} –Ω–µ—Ç —Ä–æ–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏ "${name}"**`,
                                }]
                            }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                            return message.delete().catch(() => {})
                        }
                        channel.send({
                            content: `${senators.map(m => `<@&${m.id}>`).join(', ')}`,
                            embeds: [{
                                title: "–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è",
                                color: 0x93ff54,
                                fields: [
                                    { name: "–†–æ–ª—å –Ω–∞ —Å–Ω—è—Ç–∏–µ", value: `${currole}`, inline: true },
                                    { name: "–ó–∞–ø—Ä–æ—Å–∏–ª", value: `${message.member}`, inline: true },
                                    { name: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`, value: `${curuser}`, inline: true },
                                ],
                                timestamp: new Date(),
                            }],
                            components: [row]
                        })
                    }
                })
                return message.delete().catch(() => {})
            } else if (message.member.roles.cache.some(r => (JSON.parse(guild[0].deputy_settings).mafia_leader).includes(r.id))) {
                var role = null, name = null, senators = message.guild.roles.cache.filter(r => (JSON.parse(guild[0].deputy_settings).senators_mafia).some(_r => _r == r.id));
                if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('cosa'))) role = JSON.parse(guild[0].deputy_settings).fractions['lcn'], name = 'La Cosa Nostra'; // La Cosa Nostra
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('russian'))) role = JSON.parse(guild[0].deputy_settings).fractions['rm'], name = 'Russian Mafia'; // Russian Mafia
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('warlock'))) role = JSON.parse(guild[0].deputy_settings).fractions['wmc'], name = 'Warlock MC'; // Warlock MC
                else if (message.member.roles.cache.some(r => ((r.name).toLowerCase()).includes('yakuza'))) role = JSON.parse(guild[0].deputy_settings).fractions['ykz'], name = 'Yakuza'; // Yakuza
                else {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `üìõ | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–ù–µ —Å–º–æ–≥ –ø–æ–Ω—è—Ç—å –Ω–∞ –∫–∞–∫—É—é —Ñ—Ä–∞–∫—Ü–∏—é –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è —Ä–æ–ª—å...\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                var channel = message.guild.channels.cache.find(c => c.id == JSON.parse(guild[0].deputy_settings).mafia_channel);
                if (!channel) {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `‚ö†Ô∏è | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø–æ –≤—ã–¥–∞—á–µ —Ä–æ–ª–µ–π 9 –º–∞—Ñ–∏–π...\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                var currole = message.guild.roles.cache.find(r => r.id == role);
                if (!currole) {
                    message.channel.send({
                        embeds:[{
                            color: 0xE53935,
                            title: `‚ö†Ô∏è | –û—à–∏–±–∫–∞`,
                            description: `\`\`\`–†–æ–ª—å "${name}" –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..\`\`\``,
                        }]
                    }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                    return message.delete().catch(() => {})
                }
                users.forEach((members) => {
                    var curuser = message.guild.members.cache.get(members.id);
                    if (curuser) {
                        if (!curuser.roles.cache.some(r => (r.id).includes(currole.id))) {
                            message.channel.send({
                                embeds:[{
                                    color: 0xE53935,
                                    title: `üìõ | –û—à–∏–±–∫–∞`,
                                    description: `**–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${curuser} –Ω–µ—Ç —Ä–æ–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è —Ñ—Ä–∞–∫—Ü–∏–∏ "${name}"**`,
                                }]
                            }).then((msg) => { setTimeout(() => msg.delete().catch(() => {}), 30000); });
                            return message.delete().catch(() => {})
                        }
                        channel.send({
                            content: `${senators.map(m => `<@&${m.id}>`).join(', ')}`,
                            embeds: [{
                                title: "–°–Ω—è—Ç–∏–µ —Ä–æ–ª–∏ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è",
                                color: 0x93ff54,
                                fields: [
                                    { name: "–†–æ–ª—å –Ω–∞ —Å–Ω—è—Ç–∏–µ", value: `${currole}`, inline: true },
                                    { name: "–ó–∞–ø—Ä–æ—Å–∏–ª", value: `${message.member}`, inline: true },
                                    { name: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å`, value: `${curuser}`, inline: true },
                                ],
                                timestamp: new Date(),
                            }],
                            components: [row]
                        })
                    }
                })
                return message.delete().catch(() => {})
            }
        });
   	}
}